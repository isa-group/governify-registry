---
swagger: "2.0"
info:
  description: Governify Registry
  version: "4"
  title: "Governify Registry"
  termsOfService: "www.isa.us.es"
  contact:
    name: "ISA Research Group"
    url: "www.isa.us.es"
    email: "isagroup.us@gmail.com"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "registry.governify.io"
basePath: "/api/v4"
tags:
- name: "agreement-registry"
  description: "Agreement registry"
- name: "state-registry"
  description: "State registry"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:

  /agreements:
    get:
      tags:
      - "agreement-registry"
      description: "Get all agreements"
      operationId: "agreementsGET"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/agreement"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "AgreementRegistry"
    delete:
      tags:
      - "agreement-registry"
      description: "XXX"
      operationId: "agreementsDELETE"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/agreement"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "AgreementRegistry"
    post:
      tags:
      - "agreement-registry"
      description: "Create a new agreement"
      operationId: "agreementsPOST"
      parameters:
      - name: "agreement"
        in: "body"
        description: "XXX"
        required: true
        schema:
          $ref: "#/definitions/agreement"
      responses:
        200:
          description: "Success"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "AgreementRegistry"

  /agreements/{agreement}:
    get:
      tags:
      - "agreement-registry"
      description: "Get an agreement by ID"
      operationId: "agreementsAgreementGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/agreement"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/error_model"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "AgreementRegistry"
    delete:
      tags:
      - "agreement-registry"
      description: "XXX"
      operationId: "agreementsAgreementDELETE"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/agreement"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "AgreementRegistry"

 
  ## AGREEMENT STATE ##
  # GET ALL AGREEMENTS STATES OF ALL AGREEMENTS
  /states:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesGET"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/agreement_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

    # DELETE ALL AGREEMENTS STATES OF ALL AGREEMENTS
    delete:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesDELETE"
      responses:
        200:
          description: "Success"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  # GET ALL STATES OF AN AGREEMENTS
  /states/{agreement}:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/agreement_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

    # DELETE ALL STATES OF AN AGREEMENTS
    delete:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementDELETE"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  # RELOAD STATES OF AN AGREEMENTS
  /states/{agreement}/reload:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementRELOAD"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  # GET ALL GUARANTEES STATES OF AN AGREEMENTS
  /states/{agreement}/guarantees:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementGuaranteesGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/guarantee_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  # GET A GUARANTEES STATES OF AN AGREEMENTS
  /states/{agreement}/guarantees/{guarantee}:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementGuaranteesGuaranteeGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "guarantee"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "from"
        in: "query"
        description: "XXX"
        required: false
        type: string
      - name: "to"
        in: "query"
        description: "XXX"
        required: false
        type: string
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/guarantee_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  /states/{agreement}/guarantees/{guarantee}/penalty:
    get:
      tags:
      - "state-registry"
      description: "** PLEASE NOTE: Currently, this method is only supported over Guarantees defined with a MONTHLY period **"
      operationId: "statesAgreementGuaranteesGuaranteePenaltiyGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "guarantee"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/guarantee_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  /states/{agreement}/metrics:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementMetricsGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/metrics_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"
      
  /states/{agreement}/metrics/{metric}:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementMetricsMetricGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "metric"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/metric_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

    post:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementMetricsMetricPOST"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "metric"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "query"
        in: "body"
        description: "XXX"
        required: true
        schema:
          $ref: "#/definitions/query"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/metric_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  /states/{agreement}/metrics/{metric}/records:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementMetricsMetricRecordsGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "metric"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/metric_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  /states/{agreement}/metrics/{metric}/increase:
    post:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementMetricsMetricIncreasePOST"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "metric"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: scope
        in: body
        description: "XXX"
        required: true
        #PASS to definitions
        schema:
          $ref: "#/definitions/query"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/metric_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  /states/{agreement}/pricing:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementPricingGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/guarantees_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"
  /states/{agreement}/pricing/billing/penalties:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementPricingBillingPenaltiesGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/guarantees_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  /states/{agreement}/quotas:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementQuotasGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/quotas_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"
  /states/{agreement}/quotas/{quota}:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementQuotasQuotaGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "quota"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/quota_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"

  /states/{agreement}/rates:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementRatesGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/rates_state"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/error_model"
      x-swagger-router-controller: "StateRegistry"
  /states/{agreement}/rates/{rate}:
    get:
      tags:
      - "state-registry"
      description: "XXX"
      operationId: "statesAgreementRatesRateGET"
      parameters:
      - name: "agreement"
        in: "path"
        description: "XXX"
        required: true
        type: string
      - name: "rate"
        in: "path"
        description: "XXX"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/rate_state"
      x-swagger-router-controller: "StateRegistry"

definitions:
  query:
    type: object

  agreement:
    type: object
    properties:
      id:
        type: string
      version:
        type: string
      type:
        type: string
      context:
        $ref: "#/definitions/context"
      terms:
        $ref: "#/definitions/terms"

  context:
    type: object
    properties:
      provider:
        type: string
      consumer:
        type: string
      validity:
        $ref: "#/definitions/validity"
      definitions:
        $ref: "#/definitions/definitions"
      infrastructure:
        $ref: "#/definitions/infrastructure"

  validity:
    type: object
    required:
      - initial
      - timeZone
    properties:
      initial:
        type: string
      timeZone:
        type: string
      end:
        type: string

  infrastructure:
    type: object

  definitions:
    type: object
    properties:
      schemas:
        $ref: "#/definitions/schema"
      scopes:
        $ref: "#/definitions/scopes"
      logs:
        $ref: "#/definitions/log"

  schema:
    type: object

  scopes:
    type: object

  scope:
    type: object

  # scopes:
  #   type: array
  #   items:
  #     $ref: "#/definitions/scope"
  # scope:
  #   type: object
  #   properties:
  #     service:
  #       type: string
  #     definitions:
  #       type: array
  #       items:
  #         $ref: "#/definitions/scope_definition"

  # scope_definition:
  #   type: object
  #   properties:
  #     id:
  #       type: string
  #     name:
  #       type: string
  #     description:
  #       type: string
  #     type:
  #       type: string
  #     format:
  #       type: string
  #     minimum:
  #       type: string
  #     maximum:
  #       type: string
  #     default:
  #       type: string

  log:
    type: object
    # properties:
    #   id:
    #     type: string
    #   default:
    #     type: boolean
    #   uri:
    #     type: string
    #   scopes:
    #     type: array
    #     items:
    #       $ref: "#/definitions/log_scope"

  # log_scope:
  #   type: object

  terms:
    type: object
    properties:
      guarantees:
        type: array
        items:
          $ref: "#/definitions/guarantee"
      configurations:
        type: object
        additionalProperties:
          $ref: '#/definitions/configuration'
      metrics:
        $ref: "#/definitions/metric"
      pricing:
        $ref: "#/definitions/pricing"
      quotas:
        $ref: "#/definitions/quotas"
      rates:
        $ref: "#/definitions/rates"

  configuration:
    type: object
    properties:
      scope:
        type: object
      of:
        type: array
        items:
          $ref: '#/definitions/scopedConfiguration'
  scopedConfiguration:
    type: object
    properties:
      scope:
        type: object
      value:
        type: string

  pricing:
    type: object
    properties:
      cost:
        type: number
        format: double
      currency:
        type: string
      billing:
        $ref: "#/definitions/billing"

  billing:
    type: object
    properties:
      period:
        type: string
      initial:
        type: string
      penalties:
        type: array
        items:
          $ref: "#/definitions/compensation"
      rewards:
        type: array
        items:
          $ref: "#/definitions/compensation"

  metric:
    type: object

  rates:
    type: array
    items:
      $ref: "#/definitions/rate"

  rate:
    type: object

  quotas:
    type: array
    items:
      $ref: "#/definitions/quota"

  quota:
    type: object
    properties:
      id:
        type: string
      scope:
        type: object
      over:
        type: object
      of:
        type: array
        items:
          $ref: '#/definitions/scopedQuota'

  scopedQuota:
    type: object
    properties:
      scope:
        type: object
      limits:
        type: array
        items:
          $ref: '#/definitions/limit'

  limit:
    type: object
    properties:
      max:
        type: number
      period:
        type: string

  guarantee:
    type: object
    properties:
      id:
        type: string
      scope:
        $ref: "#/definitions/guarantee_scope"
      of:
        type: array
        items:
          $ref: "#/definitions/scoped_guarante"

  guarantee_scope:
    type: object

  scoped_guarante:
    type: object
    properties:
      scope:
        $ref: "#/definitions/guarantee_scope"
      objective:
        type: string
      with:
        $ref: "#/definitions/with"
      window:
        $ref: "#/definitions/window"
      evidences:
        type: array
        items:
          $ref: "#/definitions/evidence"
      penalties:
        type: array
        items:
          $ref: "#/definitions/compensation"
      rewards:
        type: array
        items:
          $ref: "#/definitions/compensation"

  with:
    type: object

  window:
    type: object
    required:
      - type
      - period
    properties:
      initial:
        type: string
      end:
        type: string
      type:
        type: string
      period:
        type: string

  evidence:
    type: object

  compensation:
    type: object
    properties:
      over:
        $ref: "#/definitions/over"
      of:
        type: array
        items:
          $ref: "#/definitions/compensation_of"
      aggegatedBy:
        type: string
      groupBy:
        type: object
        additionalProperties:
          $ref: "#/definitions/groupByObj"
      upTo:
        type: number
        format: double

  compensation_of:
    type: object
    properties:
      value:
        type: string
      condition:
        type: string

  over:
    type: object

  groupByObj:
    type: object

  agreement_state:
    type: object

  metrics_state:
    type: object

  metric_state:
    type: object

  rates_state:
    type: object

  rate_state:
    type: object

  quotas_state:
    type: object

  quota_state:
    type: object

  guarantees_state:
    type: object

  guarantee_state:
    type: object
    properties:
      guarantee:
        type: string
      scope:
        $ref: "#/definitions/scope"
      logs:
        $ref: "#/definitions/log"
      period:
        $ref: "#/definitions/period"
      evidences:
        type: array
        items:
          $ref: "#/definitions/evidence_state"
      fulfilled:
        type: "boolean"
      penalties:
        $ref: "#/definitions/penalty_state"

  period:
    type: object
    properties:
      from:
        type: string
      to:
        type: string

  evidence_state:
    type: object
    properties:
      evidence:
        type: "boolean"
      issue_init:
        type: string
      issue_end:
        type: string
      issue_duration:
        type: string

  penalty_state:
    type: object

  parameters:
    type: object

  error_model:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

responses:
  error:
    description: "Bad request"
    schema:
      $ref: "#/definitions/error_model"
